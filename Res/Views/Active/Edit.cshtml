@model Active
@{
	var id = this.ViewContext.RouteData.Values["id"];
	ViewBag.Title = Model == null ? "添加项目" : "编辑项目";
}

<div class="modal-dialog" style="width:800px;">
	<div class="modal-content">
		<div class="color-line"></div>
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
				<h4 class="modal-title" id="firstModalLabel">@ViewBag.Title</h4>
		</div>
		@using (Html.BeginForm("Edit", "Active", Model == null ? null : new { id = Model.ActiveId }, FormMethod.Post, new { id = "form1", role = "form", @class = "form-horizontal" }))
		{
			@Html.HiddenFor(m => m.ActiveId)
			@Html.HiddenFor(m=> m.IsCurrent)
			<div class="modal-body">
				<div class="form-horizontal">

					<div class="form-group">
						@Html.LabelFor(a=>a.ActiveName,new {@class= "control-label col-sm-3" })
						<div class="col-sm-9">
						@Html.TextBoxFor(a => a.ActiveName, new { @class = "form-control" })
						@Html.ValidationMessageFor(a=>a.ActiveName)
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(a => a.LevelPKID, new { @class = "control-label col-sm-3" })
						<div class="col-sm-9">
							@Html.DropDownListFor(a => a.LevelPKID, ActiveHelper.Level.GetSelectList(), new { @class = "form-control" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(a => a.SemesterPKID, new { @class = "control-label col-sm-3" })
						<div class="col-sm-9">
							@Html.DropDownListFor(a => a.SemesterPKID, ActiveHelper.Semester.GetSelectList(), new { @class = "form-control" })
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(a => a.Year, new { @class = "control-label col-sm-3" })
						@*<label class="control-label col-sm-3"> <span class="request">*</span> </label>*@
						<div class="col-sm-9">
							@Html.TextBoxFor(a => a.Year, new { @class = "form-control" })
							@Html.ValidationMessageFor(a => a.Year)
						</div>
					</div>
					<div class="form-group">
						@Html.LabelFor(a => a.Company, new { @class = "control-label col-sm-3" })
						@*<label class="control-label col-sm-3"> <span class="request">*</span> </label>*@
						<div class="col-sm-9">
							@Html.TextBoxFor(a => a.Company, new { @class = "form-control" })
							@Html.ValidationMessageFor(a => a.Company)
						</div>
					</div>
	
					<div class="form-group">
						@Html.LabelFor(a => a.StartDate, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
								@Html.TextBoxFor(a => a.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control plan", @hasValue = Model!=null && Model.StartDate != DateTime.MinValue })
								<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
							</div>
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(a => a.EndDate, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
								@Html.TextBoxFor(a => a.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control plan", @hasValue = Model != null && Model.StartDate != DateTime.MinValue })
								<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
							</div>
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(a => a.UploadStartDate, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
								@Html.TextBoxFor(a => a.UploadStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control plan", @hasValue = Model != null && Model.StartDate != DateTime.MinValue })
								<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
							</div>
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(a => a.UploadEndDate, new { @class = "control-label col-md-3" })
						<div class="col-md-9">
							<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
								@Html.TextBoxFor(a => a.UploadEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control plan", @hasValue = Model != null && Model.StartDate != DateTime.MinValue })
								<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
							</div>
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(a => a.Description, new { @class = "control-label col-sm-3" })
						@*<label class="control-label col-sm-3"> <span class="request">*</span> </label>*@
						<div class="col-sm-9">
							@Html.TextAreaFor(a => a.Description,5,3, new { @class = "form-control" })
						</div>
					</div>

				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-dark btn-sm" data-dismiss="modal">取消</button>
					<button type="submit" class="btn btn-primary btn-sm">保存</button>
				</div>
			</div>
		}
	</div>
</div>

<script>
	$.validator.unobtrusive.parse("#form1");

	$('#form1').submit(function () {
		var $form = $(this);
		if (!$form.valid())
			return false;

		$.post($form.attr("action"), $form.serialize(), function (data, status) {
			//if (status == "success") {
			//	if (data.error != 'none') {
			//		alertify.error(data.msg);
			//		return;
			//	}

			//	alertify.success(data.msg);
			//	$('#inner-edit-form').modal('hide');
			//	$('#bootgrid').bootgrid('reload');
			//}

			$('#inner-edit-form').modal('hide');
			$('#bootgrid').bootgrid('reload');
		});

		return false;
	});
</script>
