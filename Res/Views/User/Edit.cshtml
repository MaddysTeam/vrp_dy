@model ResUser
@{ 
	var isEdit = Model != null && Model.UserId > 0;
}
<div class="modal-dialog">

	<!-- widget -->
	<div class="widget">
		<div class="widget-header">
			<h3><i class="fa fa-edit"></i> 用户编辑</h3>
			<div class="btn-group widget-header-toolbar">
				<a href="#" title="关闭" class="btn-borderless" data-dismiss="modal"><i class="fa fa-close"></i></a>
			</div>
		</div>
		<div class="widget-content">
			@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { id = "form", role = "form", @class = "form-horizontal" }))
			{
				<div class="row">
					<fieldset class="col-sm-12">
						<div class="form-group">
							@Html.HiddenFor(m => m.UserId)
							@Html.HiddenFor(m => m.Actived)
							@Html.LabelFor(m => m.UserName, new { @class = "control-label col-sm-3" })
							<div class="col-sm-9">
								@if (Model != null && Model.UserId > 0)
								{
									@Html.LabelFor(m => m.UserName, Model.UserName, new { @class = "form-control" })
								}
								else
								{
									@Html.TextBoxFor(m => m.UserName, new { @class = "form-control", maxlength = "80", placeholder = "用户名" })
									@Html.ValidationMessageFor(m => m.UserName)
								}
							</div>
						</div>
						<div class="form-group">
							@Html.LabelFor(m => m.UserTypePKID, new { @class = "control-label col-sm-3" })
							<div class="col-sm-9">
								@Html.DropDownListFor(m => m.UserTypePKID, (ViewBag.Roles as List<ResPickListItem>).Select(x => new SelectListItem { Text = x.Name, Value = x.PickListItemId.ToString() }), "请选择", new { @class = "form-control", maxlength = "80", })
								@Html.ValidationMessageFor(m => m.UserType)
							</div>
						</div>

						<div class="form-group @(isEdit && Model.ProvinceId>0? "":"hidden")" id="province">
							<label class="control-label col-sm-3"> <span class="request">*</span> 省份</label>
							<div class="col-sm-9">
								@Html.DropDownListFor(m => m.ProvinceId, (ViewBag.Provinces as List<ResCompany>).Select(x => new SelectListItem { Text = x.CompanyName, Value = x.CompanyId.ToString() }), "选择省份", new { @class = "form-control" })
							</div>
						</div>
						<div class="form-group @(isEdit && Model.AreaId>0? "":"hidden")" id="area">
							<label class="control-label col-sm-3"> <span class="request">*</span> 地区</label>
							<div class="col-sm-9">
								@Html.DropDownListFor(m => m.AreaId, (ViewBag.Areas as List<ResCompany>).Select(x => new SelectListItem { Text = x.CompanyName, Value = x.CompanyId.ToString() }), "选择地区", new { @class = "form-control" })
							</div>
						</div>
						<div class="form-group @(isEdit &&  Model.CompanyId>0? "":"hidden")" id="company">
							<label class="control-label col-sm-3"> <span class="request">*</span> 学校</label>
							<div class="col-sm-9">
								@Html.DropDownListFor(m => m.CompanyId, (ViewBag.Companies as List<ResCompany>).Select(x => new SelectListItem { Text = x.CompanyName, Value = x.CompanyId.ToString() }), "选择学校", new { @class = "form-control" })
							</div>
						</div>

						<div class="form-group">
							@Html.LabelFor(m => m.Email, new { @class = "control-label col-sm-3" })
							<div class="col-sm-9">
								@Html.TextBoxFor(m => m.Email, new { @class = "form-control", maxlength = "80", placeholder = "邮箱" })
								@Html.ValidationMessageFor(m => m.Email)
							</div>
						</div>
						<div class="form-group">
							@Html.LabelFor(m => m.RealName, new { @class = "control-label col-sm-3" })
							<div class="col-sm-9">
								@Html.TextBoxFor(m => m.RealName, new { @class = "form-control", maxlength = "80", placeholder = "真实姓名" })
								@Html.ValidationMessageFor(m => m.RealName)
							</div>
						</div>
						@*<div class="form-group">
							@Html.LabelFor(m => m.IDCard, new { @class = "control-label col-sm-3" })
							<div class="col-sm-9">
								@Html.TextBoxFor(m => m.IDCard, new { @class = "form-control", maxlength = "80", placeholder = "身份证" })
								@Html.ValidationMessageFor(m => m.IDCard)
							</div>
						</div>*@

						<div class="form-group">
							<div class="col-sm-9 col-lg-offset-3">
								<button type="submit" id="submit" class="btn btn-primary btn-block"><i class="fa fa-check-circle"></i> 保存</button>
								<button type="button" class="btn btn-default btn-block" data-dismiss="modal">取消</button>
							</div>
						</div>
					</fieldset>
				</div>
			}
		</div>

	</div>
	<!-- end widget -->

</div>

<script type="text/javascript">


	function RelationSelect(src, tat, rule, none, fixInit) {
		var $src = $(src), $tat = $(tat);
		function doit(init) {
			var key = $src.val();
			$tat.empty();
			if (none) {
				$tat.append($("<option>").val(0).text(none));
			}
			$.each(rule, function (i, n) {
				if (n.key == key) {
					$tat.append($("<option>").val(n.id).text(n.name));
				}
			});
			if (init) $tat.val(init);
		}

		$src.on("change", function () {
			doit();
		});

		doit(fixInit || $tat.val());
	}

	function isEmpty(val){
		return val==undefined || val == '' || val==0;
	}

	$(function () {

		// add validate new form.
		$.validator.unobtrusive.parse("#form");
		$("#form").submit(function () {
			var userType=$('#UserTypePKID').val();
			if (userType == '@ResUserHelper.ProvinceAdmin' && isEmpty($('#ProvinceId').val())){ alert('省管理员必须选择省份'); return false;}
			if (userType == '@ResUserHelper.CityAdmin' && (isEmpty($('#ProvinceId').val()) || isEmpty($('#AreaId').val()))){ alert('市管理员必须选择省份和地区'); return false;}
			if (userType == ('@ResUserHelper.SchoolAdmin' || userType == '@ResUserHelper.RegistedUser') && (isEmpty($('#ProvinceId').val()) || isEmpty($('#AreaId').val())|| isEmpty($('#CompanyId').val()))){ alert('必须选择省份，地区和单位'); return false;}

	
			var $form = $(this);
			if (!$form.valid())
				return false;

			$.post($form.attr("action"), $form.serialize(), function (data, status) {
				if (status == "success") {

					if (data.error != 'none') {
						alertify.error(data.msg);
						return;
					}

					alertify.success(data.msg);
					$('#inner-edit-form').modal('hide');
					$("#bootgrid").bootgrid("reload");
				}
			});

			return false;
		});


		var areas=@Html.Raw(Json.Encode(ViewBag.AreasDic));
		var schools=@Html.Raw(Json.Encode(ViewBag.SchoolsDic));
		RelationSelect($("#ProvinceId"), $("#AreaId"), areas, "选择地区");
		RelationSelect($("#AreaId"), $("#CompanyId"), schools, "选择学校");

		var o=$('#UserTypePKID').on('change', function () {
			$('#company,#province,#area').addClass('hidden').val("0");

			$("#province option:first").prop('selected','selected');
			$("#area option:gt(0),#company option:gt(0)").remove();

			var userType = $(this).val();
			if (userType == '@ResUserHelper.ProvinceAdmin' || userType == '@ResUserHelper.CityAdmin' || userType == '@ResUserHelper.SchoolAdmin' ||  userType == '@ResUserHelper.Export' || userType=='@ResUserHelper.RegistedUser') {
				$('#province').removeClass('hidden').show();
			}
			if (userType == '@ResUserHelper.CityAdmin' || userType == '@ResUserHelper.SchoolAdmin'  ||  userType == '@ResUserHelper.Export' || userType=='@ResUserHelper.RegistedUser') {
				$('#area').removeClass('hidden');
			}
			if (userType == '@ResUserHelper.SchoolAdmin'  ||  userType == '@ResUserHelper.Export' || userType=='@ResUserHelper.RegistedUser') {
				$('#company').removeClass('hidden').show()
			}

		});


	});
</script>
